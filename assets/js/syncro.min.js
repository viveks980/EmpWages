
!function () {
    var e = "div", t = "button", a = "span", r = "p",
        o = {
            title: "Payment Status" , catagories: [{ name: "Successfully Paid", value: 66, color: "#03c2fc" },

            { name: "Pending", value: 24, color: "#ff9f40" }, { name: "Unpaid", value: 10, color: "#36a2eb" },

                // { name: "Regular Maintenance", value: 6, color: "#4bc0c0" }, { name: "string", value: 6, color: "#36a2eb" }]
            ]
        };
    function n(e, t) { "mouseenter" === e.type ? t.classList.contains("active") || t.classList.add("active") : "mouseleave" === e.type && t.classList.contains("active") && t.classList.remove("active") }

    function c(e, t = "") { var a = document.createElement(e); t && t.split(" ").forEach(function (e, t) { a.classList.add(e) }); return a }


    function toggleActiveClass(target) {
        const activeItem = document.querySelector('.syncro-progress-stepped-item.active');
        if (activeItem) {
            activeItem.classList.remove('active', 'right-rounded');
        }
        target.classList.add('active');
        // Check if the target item is pink (value: 66) and has active class, add right-rounded class
        if (target.textContent === '66') {
            target.classList.add('right-rounded');
        }
    }
    window.addEventListener("load",
        function () {
            [].forEach.call(document.querySelectorAll("[data-stepped-bar]"),
                function (s, i) {
                    if (s) {
                        var l, d = 0; l = s.getAttribute("data-stepped-bar") ? JSON.parse(s.getAttribute("data-stepped-bar")) : o; var p = c(r, "syncro-card-title"); p.textContent = l.title; var u = c(e, "syncro-progress-stepped"), v = c(e, "syncro-row"); l.catagories.forEach(function (e, t) { d += e.value }), l.catagories.forEach(function (r, o) {
                            stepItem = c(e, "syncro-progress-stepped-item"), stepItem.setAttribute("data-id", "progress-stepped-item-" + i + "-" + o), stepItem.textContent = r.value, stepItem.style.width = r.value / d * 100 + "%", stepItem.style.backgroundColor = r.color, u.appendChild(stepItem); var n = c(a, "syncro-dot"); n.style.backgroundColor = r.color; stepItem.style.borderRadius = "26px"; var s = c(a, "syncro-category-name"); s.textContent = r.value + "% " + r.name; var l = c(t, "syncro-btn");
                            l.setAttribute("data-target", "progress-stepped-item-" + i + "-" + o),

                                l.appendChild(n), l.appendChild(s); var p = c(e, "syncro-col-auto"); p.appendChild(l), v.appendChild(p)

                        }); var m = c(e, "syncro-card-body"); m.appendChild(p), m.appendChild(u), m.appendChild(v); var f = c(e, "syncro-card"); f.appendChild(m); var y = c(e); y.appendChild(f), s.innerHTML = y.innerHTML, [].forEach.call(s.querySelectorAll(".syncro-progress-stepped-item"),

                            function (e) { e.addEventListener("mouseenter", t => { n(t, e) }), e.addEventListener("mouseleave", t => { n(t, e) }) }), [].forEach.call(s.querySelectorAll(".syncro-btn"),

                                function (e) {

                                    e.addEventListener("click",

                                        function () {

                                            const t = e.getAttribute("data-target"); var a = document.querySelector('[data-id="' + t + '"]'); a.classList.contains("active") ? a.classList.remove("active") : ([].forEach.call(s.querySelectorAll(".syncro-progress-stepped-item"),

                                                function (e) { e.classList.remove("active") }), a.classList.add("active"))
                                        })
                                })
                    }
                })

            const progressBarItems = document.querySelectorAll(".syncro-progress-stepped-item");
            progressBarItems.forEach((item, index) => {
                item.style.display = "inline-block";
                // item.style.width = "(100%/3)";
                item.style.marginLeft = "-10px";
                item.style.flexGrow = "1";
                item.style.textAlign = "center";
                item.style.marginRight = "-15px"; /* Adjust the margin as needed to create space between items */
                item.style.padding = "0px"; /* Adjust the padding as needed */
                item.style.boxSizing = "border-box"; /* Include padding and border in the element's total width */
                item.style.borderRadius = "26px";
                item.style.postion = "relative";
                item.style.zIndex = progressBarItems.length - index;
            });
        })
}();